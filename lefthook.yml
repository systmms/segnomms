# Lefthook configuration for segnomms
# See https://github.com/evilmartians/lefthook for more information

pre-commit:
  parallel: true
  commands:
    # GitHub Actions linting
    actionlint:
      glob: ".github/workflows/*.{yml,yaml}"
      run: actionlint {staged_files}
    # Python code formatting - Black
    black:
      glob: "*.py"
      run: black --check {staged_files}
    # Python import sorting - isort
    isort:
      glob: "*.py"
      run: isort --check-only --profile black {staged_files}
    # Python linting - Flake8
    flake8:
      glob: "*.py"
      exclude: "examples/**/*.py"
      # Temporary ignores - working to systematically remove these rules:
      # F401: Unused imports, F841: Unused variables (Priority 1) - PARTIAL
      # E402: Import placement (Priority 3) - LEGITIMATE (conditional imports in test utilities)
      # REMOVED: F821 (undefined names), F811 (redefinitions) - FIXED ✅
      # REMOVED: E226 (operator spacing), E712 (boolean comparison), E501 (line length) - FIXED ✅
      # REMOVED: F541 (f-string placeholders), E722 (bare except) - FIXED ✅
      run: flake8 --extend-ignore=E402,F841,F401 {staged_files}
    # General file checks
    trailing-whitespace:
      run: |
        for file in {staged_files}; do
          if grep -q '[[:space:]]$' "$file"; then
            echo "Trailing whitespace found in $file"
            exit 1
          fi
        done

    end-of-file:
      run: |
        for file in {staged_files}; do
          if [ -n "$(tail -c 1 "$file")" ]; then
            echo "No newline at end of file: $file"
            exit 1
          fi
        done

    check-yaml:
      glob: "*.{yml,yaml}"
      exclude: ".github/workflows/*.{yml,yaml}"
      run: |
        for file in {staged_files}; do
          python -c "import yaml; yaml.safe_load(open('$file'))" || exit 1
        done

    check-json:
      glob: "*.json"
      run: |
        for file in {staged_files}; do
          python -m json.tool "$file" > /dev/null || exit 1
        done

    check-merge-conflict:
      run: |
        for file in {staged_files}; do
          if grep -E '^[<>|=]{7}' "$file"; then
            echo "Merge conflict markers found in $file"
            exit 1
          fi
        done

    debug-statements:
      glob: "*.py"
      run: |
        for file in {staged_files}; do
          if grep -E '(import pdb|pdb\.set_trace\(\)|import ipdb|ipdb\.set_trace\(\))' "$file"; then
            echo "Debug statements found in $file"
            exit 1
          fi
        done

    # Type checking - MyPy with comprehensive configuration from pyproject.toml
    mypy:
      glob: "*.py"
      exclude: "tests/|examples/|repo/"
      run: mypy {staged_files}
