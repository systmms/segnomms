name: Documentation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    paths:
    - 'docs/**'
    - 'segnomms/**/*.py'
    - 'README.md'
    - 'CHANGELOG.md'
    - 'repo/check_doc_*.py'
    - 'repo/spell_check_docs_cspell.py'
    - 'project-words.txt'
    - 'cspell.json'
    - 'repo/setup_cspell.sh'
    - 'repo/test_readme_examples.py'
    - 'repo/generate_example_qrs.py'
    - 'repo/docs_quality_gate.sh'
    - '.github/workflows/docs.yml'
  release:
    types: [published]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"

jobs:
  build-docs:
    name: Build Documentation
    uses: ./.github/workflows/_docs-build.yml
    with:
      python-version: "3.11"
      fetch-depth: 0  # Full history for proper version detection
      upload-artifacts: true
      run-link-check: true
      run-coverage-report: true
      dependency-check: true

  test-examples:
    name: Test Documentation Examples
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        enable-cache: true
        cache-dependency-glob: "**/uv.lock"

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Cache UV and Virtual Environment
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: uv-${{ runner.os }}-python${{ env.PYTHON_VERSION }}-${{ hashFiles('**/uv.lock', 'pyproject.toml') }}
        restore-keys: |
          uv-${{ runner.os }}-python${{ env.PYTHON_VERSION }}-
          uv-${{ runner.os }}-

    - name: Install dependencies
      run: |
        uv sync --extra test
        uv pip install -e .

    - name: Install system dependencies for SVG processing
      run: |
        sudo apt-get update
        sudo apt-get install -y librsvg2-bin

    - name: Test README examples
      run: uv run python repo/test_readme_examples.py

    - name: Generate example QR codes
      run: uv run python repo/generate_example_qrs.py

    - name: Upload example outputs
      uses: actions/upload-artifact@v4
      with:
        name: documentation-examples
        path: example-outputs/

  spell-check:
    name: Spell Check Documentation (cspell)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install cspell dependencies
      run: npm install

    - name: Verify cspell installation
      run: |
        echo "üîç Verifying cspell installation..."
        npx cspell --version || echo "‚ùå cspell not available"
        echo "üìö Available dictionaries:"
        npx cspell --show-config --config cspell.json | head -20 || echo "‚ùå Configuration error"
        echo "üß™ Testing spell checking functionality:"
        echo "test hello wrold" | npx cspell stdin --no-progress || echo "‚úÖ Correctly detected spelling errors"

    - name: Check spelling in documentation
      run: python repo/spell_check_docs_cspell.py

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [build-docs, test-examples]
    if: github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Download documentation artifacts
      uses: actions/download-artifact@v5
      with:
        name: documentation-html
        path: docs-html/

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs-html/

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Comment documentation URL on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v8
      with:
        script: |
          const { owner, repo } = context.repo;
          const pr_number = context.issue.number;

          const body = `## üìö Documentation Preview

          The documentation has been built successfully!

          **Preview URL:** https://segnomms.systmms.dev/

          ### Documentation Coverage
          - Built from commit: ${{ github.sha }}
          - All examples tested and validated
          - Spelling checked for common errors

          üìÅ Full documentation artifacts are available in this workflow run.
          `;

          await github.rest.issues.createComment({
            issue_number: pr_number,
            owner: owner,
            repo: repo,
            body: body
          });

  documentation-quality-gate:
    name: Documentation Quality Gate
    runs-on: ubuntu-latest
    needs: [build-docs, test-examples, spell-check]
    if: always()

    steps:
    - uses: actions/checkout@v5

    - name: Evaluate documentation quality
      run: |
        ./repo/docs_quality_gate.sh \
          --build="${{ needs.build-docs.result }}" \
          --examples="${{ needs.test-examples.result }}" \
          --spell="${{ needs.spell-check.result }}" \
          --verbose
