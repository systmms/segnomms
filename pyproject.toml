[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "segnomms"
dynamic = ["version"]
description = "Advanced QR code generation plugin for Segno with custom shapes, styling, and interactivity"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SYSTMMS", email = "admin@systmms.com"}
]
maintainers = [
    {name = "SYSTMMS", email = "admin@systmms.com"}
]
keywords = ["qr", "qrcode", "svg", "interactive", "segno", "plugin", "shapes", "styling"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "segno>=1.5.2",  # Tested compatibility: 1.5.2, 1.6.0, 1.6.6
    "pydantic>=2.7,<3",  # For configuration validation and JSON schema with enum objects
    "typing-extensions>=4.8; python_version<'3.11'",  # For modern typing features
]

[project.optional-dependencies]
# Legacy optional dependencies kept for compatibility
# All development dependencies are now in [tool.uv]
dev = []
test = []
docs = []

[project.urls]
Homepage = "https://github.com/systmms/segnomms"
Repository = "https://github.com/systmms/segnomms.git"
"Bug Reports" = "https://github.com/systmms/segnomms/issues"
Changelog = "https://github.com/systmms/segnomms/blob/main/CHANGELOG.md"
Documentation = "https://github.com/systmms/segnomms#readme"

[tool.pyodide]
# Pyodide-specific configuration
packages = ["segno"]
# Pure Python package - no binary dependencies
pure = true

[project.entry-points."segno.plugin.converter"]
interactive_svg = "segnomms.plugin:write"

[tool.hatch.version]
path = "segnomms/__init__.py"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
disallow_any_generics = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
incremental = true

# Better error messages
show_column_numbers = true
pretty = true
error_summary = true

# External dependencies
[[tool.mypy.overrides]]
module = ["segno.*"]
ignore_missing_imports = true

# Already well-typed modules (Pydantic models) - enable strict checking
[[tool.mypy.overrides]]
module = ["segnomms.config.models.*"]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true

# Core models that should be well-typed
[[tool.mypy.overrides]]
module = ["segnomms.core.models", "segnomms.validation.models", "segnomms.svg.models", "segnomms.algorithms.models"]
disallow_untyped_defs = true
disallow_incomplete_defs = true

# Well-tested modules with strict type checking
[[tool.mypy.overrides]]
module = [
    "segnomms.utils.accessibility",     # 91% test coverage
    "segnomms.utils.palette",           # 96% test coverage
    "segnomms.core.detector",           # 96% test coverage
    "segnomms.core.matrix_manipulator", # 90% test coverage
    "segnomms.algorithms.clustering",   # 82% test coverage
    "segnomms.intents.processor",       # 96% test coverage - just fixed!
    "segnomms.core.matrix.matrix_validator",    # Newly fixed with full typing
    "segnomms.core.matrix.performance_monitor", # Newly fixed with full typing
    "segnomms.core.advanced_qr",        # Newly fixed with full typing
    "segnomms.capabilities.*",          # 0 errors - ready for strict checking
    "segnomms.types",                   # 0 errors - centralized type definitions
    "segnomms.validation.*",            # 1 error fixed - return annotation added
    "segnomms.color.*",                 # 1 error fixed - inner function typing
    "segnomms.intents.*",               # 2 errors fixed - Pydantic validator typing
    "segnomms.degradation.*"            # 10 errors fixed - missing return annotations
]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_optional = true
warn_return_any = true
disallow_any_unimported = true

# Complex modules - keep ignored for now, enable incrementally
# TODO: Enable one module at a time and fix type issues:
# Note: Core module enabled for type checking
# [[tool.mypy.overrides]]
# module = ["segnomms.core.*"]
# ignore_errors = true

# Shapes module - enabling basic type checking (159 errors with strict mode)
[[tool.mypy.overrides]]
module = ["segnomms.shapes.*"]
check_untyped_defs = true
# TODO: Enable strict typing after fixing **kwargs annotations

# Plugin and interface modules - enabling basic type checking (complex I/O typing)
[[tool.mypy.overrides]]
module = ["segnomms.plugin.*"]
check_untyped_defs = true
# TODO: Enable strict typing after resolving IO type conflicts

# Validation module - enabling basic type checking
[[tool.mypy.overrides]]
module = ["segnomms.validation.*"]
check_untyped_defs = true
# TODO: Enable strict typing after validation

# SVG module - enabling basic type checking for new comprehensive module
[[tool.mypy.overrides]]
module = ["segnomms.svg.*"]
check_untyped_defs = true
# TODO: Enable strict typing incrementally

# Remaining modules - enabling basic type checking for gradual improvement
[[tool.mypy.overrides]]
module = [
    "segnomms.a11y.*"        # Accessibility utilities - 7 errors, need more work
]
check_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
branch = true
source = ["segnomms"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/distutils/*",
    "*/venv/*",
    "*/.venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.uv]
# Development dependencies for SegnoMMS
dev-dependencies = [
    # Build tools
    "build>=1.0.0",
    "twine>=4.0.0",  # For deploying to package registries
    "keyrings.google-artifactregistry-auth>=1.0.0",  # For Google Artifact Registry
    # Testing - Core
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "coverage[toml]>=7.0.0",
    # Testing - Enhanced
    "pytest-randomly>=3.0.0",
    "pytest-timeout>=2.0.0",
    "pytest-xdist>=3.0.0",
    "hypothesis>=6.0.0",
    # Testing - QR Decoders
    "zxing-cpp>=2.0.0",
    # Testing - Data formats
    "PyYAML>=6.0.0",
    # Code quality
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",  # Type stubs for yaml import
    # Documentation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    # Visual testing helpers
    "pillow>=10.0.0",
    "numpy>=1.20.0",
    "cairosvg>=2.0.0",
    "pytest-image-snapshot>=0.4.0",
    # Development tools
    "lefthook>=1.0.0",
    "beautifulsoup4>=4.0.0",
    "lxml>=4.0.0",  # For XML/SVG parsing in tests
    "psutil>=5.0.0",  # For performance benchmarking
]
